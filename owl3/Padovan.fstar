let rec padovan (n:nat)
   : nat
   = if n <= 2
      then 1
      else padovan (n - 2) + padovan (n - 3)

let rec sum1 (n:nat) (m:nat)
   : nat
   = if m > n
      then 0
      else padovan m + sum1 n (m + 1)

let _ = assert (forall (n:nat). sum1 n 0)
